<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="tigerTask">

	<typeAlias alias="tigerTaskDo"
		type="com.dianping.tiger.biz.task.dataobject.TigerTaskDo" />

	<sql id="tigerTask_columns">
		id,
		addTime,
		updateTime,
		handlerGroup,
		handler,
		node,
		retryTimes,
		status,
		earliestExecuteTime,
		parameter,
		host,
		ttid,
		bizUniqueId,
		remark
	</sql>

    <insert id="tigerTask.insert" parameterClass="tigerTaskDo">
        <![CDATA[
		INSERT INTO Tiger_Task
		(
		id,
		addTime,
		updateTime,
		handlerGroup,
		handler,
		node,
		retryTimes,
		status,
		earliestExecuteTime,
		parameter,
		host,
		ttid,
		bizUniqueId,
		remark
		)
		VALUES(
		#id#,
		now(),
		now(),
		#handlerGroup#,
		#handler#,
		#node#,
		#retryTimes#,
		#status#,
		#earliestExecuteTime#,
		#parameter#,
		#host#,
		#ttid#,
		#bizUniqueId#,
		#remark#
		)
		]]>
		<selectKey keyProperty="id" resultClass="java.lang.Long">
                SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    
    <update id="tigerTask.updateTaskStatus" parameterClass="map">
    	UPDATE Tiger_Task
    	SET   updateTime = now(),
    	      status = #status#,
    	      host = #hostName#,
    	      ttid = #ttid#
    	WHERE id = #id# 
    </update>
    
    <update id="tigerTask.updateRetryTimesAndExecuteTime" parameterClass="map">
    	UPDATE Tiger_Task
    	SET   updateTime = now(),
    	      earliestExecuteTime = #nextExecuteTime#,
    	      host = #hostName#,
    	      ttid = #ttid#
    	WHERE id = #id# 
    </update>
    
    <update id="tigerTask.cancelTaskById" parameterClass="map">
    	UPDATE Tiger_Task
    	SET   updateTime = now(),
    		  status = #status#,
    		  remark = CONCAT(remark, #extendRemark#)
    	WHERE handlerGroup = #handlerGroup#
    	AND   id = #id# 
    </update>
    
    <update id="tigerTask.cancelTaskByBizUniqueId" parameterClass="map">
    	UPDATE Tiger_Task
    	SET   updateTime = now(),
    		  status = #status#,
    		  remark = CONCAT(remark, #extendRemark#)
    	WHERE handlerGroup = #handlerGroup#
    	AND   bizUniqueId = #bizUniqueId# 
    </update>
    
    <select id="tigerTask.queryTasksWithLimit" parameterClass="map" resultClass="tigerTaskDo">
    	SELECT <include refid="tigerTask_columns"/>
    	FROM Tiger_Task
    	WHERE handlerGroup = #handlerGroup#
    	<isNotEmpty prepend="and" property="handler">
    		handler = #handler#
    	</isNotEmpty>
    	AND   node IN
        <iterate open="(" close=")" property="nodeList" conjunction=",">
            #nodeList[]#
        </iterate>
        AND status = 0
        <![CDATA[ 
        AND earliestExecuteTime <= now() 
        ]]>
        ORDER BY earliestExecuteTime
        LIMIT #limit#
    </select>
    
    <select id="tigerTask.queryTasksWithLimitByBackFetch" parameterClass="map" resultClass="tigerTaskDo">
    	SELECT <include refid="tigerTask_columns"/>
    	FROM Tiger_Task
    	WHERE handlerGroup = #handlerGroup#
    	<isNotEmpty prepend="and" property="handler">
    		handler = #handler#
    	</isNotEmpty>
    	AND   node IN
        <iterate open="(" close=")" property="nodeList" conjunction=",">
            #nodeList[]#
        </iterate>
        AND status = 0
        <![CDATA[ 
        AND earliestExecuteTime <= now() 
        AND id > #id#
        ]]>
        ORDER BY earliestExecuteTime
        LIMIT #limit#
    </select>
    
    <select id="tigerTask.loadTaskById" parameterClass="map" resultClass="tigerTaskDo">
		SELECT <include refid="tigerTask_columns"/>
    	FROM Tiger_Task
    	WHERE id = #id#
	</select>
	
	<select id="tigerTask.loadTaskByBizUniqueId" parameterClass="map" resultClass="tigerTaskDo">
		SELECT <include refid="tigerTask_columns"/>
    	FROM Tiger_Task
    	WHERE bizUniqueId = #bizUniqueId#
	</select>

</sqlMap>